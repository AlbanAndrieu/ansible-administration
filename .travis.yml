---
language: python
python:
#  - 2.7
#  - 3.3
#  - 3.4
#  - 3.5
  - 3.6
services:
  - docker
cache:
  bundler:
  directories:
    - $HOME/.cache/pip
env:
  global:
    - JENKINS_HOME=/home/jenkins
    - JENKINS_UID=3000
    - DOCKER_GID=999
    - secure: MD73NCVzctbVmi2QnQtwtH/ISXN2K0alsLbixoaXl7gr3XvTB4sYB0u+KKtPV46jbeAlQqTRObPfQouPrsLsiNDYcpuN0I5bKsn3TTs4ZHIkD0I2Q9Wh3qNM2fYf9mw3ZUhvXVTEod0W7jzkVGb6kitRCJj8rioKKzvE/YdVsG4=
  matrix:
#  - ANSIBLE_VERSION=latest
    - ANSIBLE_VERSION=2.7.2
sudo: required
dist: trusty
branches:
  only:
    - master
virtualenv:
  system_site_packages: false
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install curl
  - sudo apt-get install -qq python-apt python-pycurl
  - sudo pip install --upgrade pip
  - mkdir -p $HOME/.cache/pip/wheels
  # build wheel only if none present
  - travis_wait pip wheel --find-links=$HOME/.cache/pip/wheels --use-wheel --wheel-dir=$HOME/.cache/pip/wheels scipy
  - travis_wait pip wheel --find-links=$HOME/.cache/pip/wheels --use-wheel --wheel-dir=$HOME/.cache/pip/wheels cython
  # now install from it
  - pip install --no-index --find-links=$HOME/.cache/pip/wheels scipy
  - pip install --no-index --find-links=$HOME/.cache/pip/wheels cython
  - pip install coveralls
install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible; else pip install ansible==$ANSIBLE_VERSION; fi
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install ansible-lint; fi

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

  - pip install molecule

  # Install dependencies.
#  - git clone https://github.com/geerlingguy/ansible-role-repo-epel geerlingguy.repo-epel
#  - git clone https://github.com/AlbanAndrieu/Stouts.python.git python
#  - git clone https://github.com/AlbanAndrieu/ansible-role-ntp.git geerlingguy.ntp
#  - git clone https://github.com/AlbanAndrieu/ansible-locale.git locale
#  - git clone https://github.com/AlbanAndrieu/ansible-hostname.git alban.andrieu.hostname
#  - git clone https://github.com/AlbanAndrieu/ansible-java.git java
#  - git clone https://github.com/AlbanAndrieu/ansible-common.git alban.andrieu.common

  # Update Ansible submodule.
  - git pull && git submodule init && git submodule update && git submodule status
  - git submodule foreach git checkout master

  - ansible-galaxy install -r requirements.yml -p ./roles/ --ignore-errors

script:
  # Check ansible version
  - ansible --version

  # Prepare tests
  # Add user jenkins to the image
  - id -a
  - getent passwd 3000 || true # 3000 not found we can use it for jenkins user
#  - groupadd -g ${DOCKER_GID} docker && \
  - sudo adduser --quiet --disabled-password --shell /bin/bash --uid ${JENKINS_UID} --gid ${DOCKER_GID} --home ${JENKINS_HOME} --gecos "Jenkins" jenkins
  # Set password for the jenkins user (you may want to alter this).
#  - sudo echo "jenkins:jenkins1234" | sudo chpasswd
  
  # Check syntax
  - ansible-playbook -i ./hosts --syntax-check ./administration.yml -e "python_versions=[2.7, 3.5]"  -e "docker_gid=${DOCKER_GID}" -e "jenkins_id=${JENKINS_UID}"

  # Molecule test
  # - molecule test

  # First run
  - ansible-playbook -i ./hosts --connection=local -vvvv ./administration.yml -e "python_versions=[2.7, 3.5]" -e "docker_gid=${DOCKER_GID}" -e "jenkins_id=${JENKINS_UID}"

  # - coverage run --source=yourpackagename setup.py test

after_success:
  - coveralls

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  email:
    recipients:
      - alban.andrieu@nabla.mobi
    on_success: [always|never|change]         # default: change
    on_failure: [always|never|change]         # default: always
