---
# This playbook contains common plays that will be run on all nodes.

- name: administration | Install monitoring tools
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: package
  with_items:
   - smartmontools
   - ssmtp
   - snmp #for cacti
   - snmpd #for cacti

- name: administration | Make sure multiverse is enabled for AWS tools
  apt_repository: repo="deb {{ item }} {{ansible_lsb.codename}} universe multiverse" state=present update_cache=yes
  become: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and apt_install_multiverse_repositories
  with_items: apt_multiverse_repositories

- name: administration | Make sure multiverse is enabled for AWS tools
  apt_repository: repo="deb {{ item }} {{ansible_lsb.codename}}-updates universe multiverse" state=present update_cache=yes
  become: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and apt_install_multiverse_repositories
  with_items: apt_multiverse_repositories

- name: administration | Install AWS tools
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: package
  with_items:
   - ec2-api-tools
   - s3cmd

- name: administration | Install other tools
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: package
  with_items:
   - daemon
   - mailutils

- name: administration | Install connection tools
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags: package
  with_items:
#   - nis
   - ufw

#- name: Configure domain file
#  become: yes
#  template: src=defaultdomain-{{ ansible_distribution }}-{{ ansible_architecture}}.j2 dest=/etc/defaultdomain
#  tags: configure

# NTP below is installed by the ntp ansible role
#- name: Install ntp
#  yum: name=ntp state=present
#  become: yes
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
#  tags: package
#
#- name: Install ntp
#  apt: pkg=ntp state=present update_cache=yes
#  become: yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package

#TODO see also ntp role
- name: administration | Configure ntp file
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  become: yes
  tags: configure
  notify: restart ntp

- name: administration | Start the ntp service
  service: name=ntp state=started enabled=true
  become: yes
  tags: service

#- name: administration | Install nis
#  apt: pkg=nis state=present update_cache=yes
#  become: yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package

#- name: administration | Configure yellow page file
#  become: yes
#  template: src=yp.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/yp.conf
#  tags: configure
#  notify: restart nis

#- name: administration | Configure nis file
#  become: yes
#  template: src=nsswitch.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/nsswitch.conf
#  tags: configure
#  notify: restart nis

#- name: administration | Copy the nis init script
#  copy: src=nis-{{ ansible_distribution }}-{{ ansible_architecture }}.sh dest=/etc/init.d/nis mode=0755
#  become: yes
#  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( ansible_distribution_release == 'precise' )
#  tags: configure

#- name: administration | Start the nis service
#  become: yes
#  service: name=nis state=started enabled=true
#  tags: service

#- name: administration | Install automount packages
#  apt: name={{ item }} state=present
#  with_items:
#    - autofs
#    - autofs5
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package
#  become: yes

#- name: administration | Install automount packages
#  yum: name={{ item }} state=latest
#  with_items:
#  - autofs
#  - nfs-utils
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
#  tags: package
#  become: yes

#- name: administration | Configure autofs file
#  become: yes
#  template: src=rc.local-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/rc.local
#  tags: configure
#  notify: restart autofs

#- name: administration | Configure autofs file
#  become: yes
#  template: src=auto.master-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/auto.master
#  tags: autofs
#  notify: restart autofs

#- name: administration | Configure autofs file
#  become: yes
#  template: src=autofs_ldap_auth.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/autofs_ldap_auth.conf
#  tags: configure
#  notify: restart autofs

#- name: administration | Start the autofs service
#  service: name=autofs state=started enabled=true
#  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
#  tags: service
#  become: yes

#- name: administration | Start services
#  service: name={{ item }} state=started enabled=yes
#  with_items:
#  - rpcbind
#  - nfslock
#  when: ( ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
#  tags: service
#  become: yes

- name: administration | Install sendmail tools
  apt: pkg={{ item }} state=present update_cache=yes
  become: yes
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  tags: package
  with_items:
   - sendmail

- name: administration | Copy the sendmail configuration file
  template: src=sendmail.cf.j2 dest=/etc/mail/sendmail.cf mode=0755
  become: yes
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  tags: configure

#copy current user key to root
- include: copy-keys.yml
