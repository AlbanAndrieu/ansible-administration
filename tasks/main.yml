---
# This playbook contains common plays that will be run on all nodes.

- name: Assert platform is supported
  assert:
    that:
      - ansible_os_family in ['Debian', 'RedHat', 'Windows','Solaris','Darwin']
      - ansible_architecture in ['x86_64']

- name: Include OS-specific variables.
  include_vars: "{{ ansible_distribution }}-{{ ansible_architecture }}.yml"

- import_tasks: hpe.yml

- import_tasks: dell.yml

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }} update_cache=yes"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
   - snmp #for cacti
   - snmpd #for cacti
  become: yes

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags: package
  with_items:
   - smartmontools
  become: yes

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags: package
  with_items:
   - ssmtp
  become: yes

- name: administration | Make sure multiverse is enabled for AWS tools
  apt_repository: repo="deb {{ item }} {{ansible_lsb.codename}} universe multiverse" state=present update_cache=yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version in ['12.04']) and apt_install_multiverse_repositories
  with_items: apt_multiverse_repositories
  become: yes

- name: administration | Make sure multiverse is enabled for AWS tools
  apt_repository: repo="deb {{ item }} {{ansible_lsb.codename}}-updates universe multiverse" state=present update_cache=yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version in ['12.04']) and apt_install_multiverse_repositories
  with_items: apt_multiverse_repositories
  become: yes

- name: administration | Install AWS tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"  
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04'])
  tags: package
  with_items:
   - ec2-api-tools
   - s3cmd
  become: yes

- name: administration | Install other tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
   - daemon
   - mailutils
  become: yes

- name: administration | Install connection nfs client tools
  action: "{{ ansible_pkg_mgr}} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and (ansible_distribution_version not in ['12.04', '14.04'])
  tags: package
  with_items:
   - rpcbind
   - nfs-common
  become: yes

- name: administration | Install raid tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
   - mdadm 
   - dmraid   
   - pciutils
  become: yes

- name: administration | Install hardwar list tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  become: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
   - lshw   
  become: yes
   
- name: administration | Install connection tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
#   - nis
   - ufw
  become: yes

#- name: Configure domain file
#  become: yes
#  template: src=defaultdomain-{{ ansible_distribution }}-{{ ansible_architecture}}.j2 dest=/etc/defaultdomain
#  tags: configure

# NTP below is installed by the ntp ansible role
#- name: Install ntp
#  yum: name=ntp state=present
#  become: yes
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
#  tags: package
#
#- name: Install ntp
#  apt: pkg=ntp state=present update_cache=yes
#  become: yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package

#TODO see also ntp role
- name: administration | Configure ntp file
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  when: (ansible_os_family != "Darwin")
  tags: configure
  notify: restart ntp
  become: yes

- name: administration | Start the ntp service
  service: name=ntp state=started enabled=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: service
  become: yes

#- import_tasks: automount.yml

- name: administration | Install sendmail tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags: package
  with_items:
   - sendmail
  become: yes
  changed_when: false

- name: administration | Copy the sendmail configuration file
  template: src=sendmail.cf.j2 dest=/etc/mail/sendmail.cf mode=0755
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  tags: configure
  become: yes

#copy current user key to root
- import_tasks: copy-keys.yml
