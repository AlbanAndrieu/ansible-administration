---
# This playbook contains common plays that will be run on all nodes.

- name: Assert platform is supported
  assert:
    that:
      - ansible_os_family in ['Debian', 'RedHat', 'Windows', 'Solaris', 'Darwin']
      - ansible_architecture in ['x86_64']

- name: Include OS-specific variables.
  include_vars: "{{ ansible_distribution }}-{{ ansible_architecture }}.yml"

# - import_tasks: subscription.yml

- name: administration | Make sure multiverse is enabled for AWS tools or selinux
  apt_repository: repo="deb {{ item }} {{ ansible_lsb.codename }} universe multiverse" state=present update_cache=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['14.04', '16.04']) and apt_install_multiverse_repositories
  with_items: '{{ apt_multiverse_repositories }}'
  become: true

- name: administration | Make sure multiverse is enabled for AWS tools or selinux
  apt_repository: repo="deb {{ item }} {{ ansible_lsb.codename }}-updates universe multiverse" state=present update_cache=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['14.04', '16.04']) and apt_install_multiverse_repositories
  with_items: '{{ apt_multiverse_repositories }}'
  become: true

- import_tasks: selinux.yml

- import_tasks: hpe.yml

- import_tasks: dell.yml

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }} update_cache=true"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - package
    - vm
  with_items:
    - snmp    # for cacti
    - snmpd   # for cacti
  become: true
  ignore_errors: true

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags:
    - package
    - vm
  with_items:
    - smartmontools
  become: true

- name: administration | Install monitoring tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags: package
  with_items:
    - ssmtp
  become: true

- name: administration | Install AWS tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and (ansible_distribution_version not in ['12.04'])
  tags: package
  with_items:
    - ec2-api-tools
    - s3cmd
  become: true
  ignore_errors: true

- name: administration | Install other tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  with_items:
    - daemon
    - mailutils
  become: true

- name: administration | Install connection nfs client tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and (ansible_distribution_version not in ['12.04', '14.04'])
  tags: package
  with_items:
    - nfs-common
  become: true

- name: administration | Install raid tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - package
    - vm
  with_items:
    - mdadm
    - dmraid
    - pciutils
  become: true

- name: administration | Install connection tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - package
    - vm
  with_items:
    - ufw
  become: true

- name: administration | Install hardware list tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - package
    - vm
  with_items:
    - lshw
  become: true

- import_tasks: automount.yml
  when: automount_enabled

- name: administration | Install ntp
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin")
  tags:
    - package
    - vm
  with_items:
    - ntp
  become: true

- name: administration | Configure ntp file
  template: src=ntp.conf.j2 dest=/etc/ntp.conf
  when: (ansible_os_family != "Darwin")
#  notify: restart ntp
  become: true
  tags:
    - restart
    - notify
    - configure
    - ntp
    - vm

- name: administration | Start the ntp service
  service: name=ntp state=started enabled=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags:
    - service
    - ntp
    - vm
  become: true
  ignore_errors: true

# - name: administration | Start the ntp service
#   service: name=ntpd state=started enabled=true
#   when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
#   tags: service

- name: administration | Install sendmail tools
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_os_family != "Darwin") and (ansible_distribution_version not in ['19.04'])
  tags:
    - package
    - mail
    - vm
  with_items:
    - lsb-invalid-mta    # Ubuntu 19.04
    - sendmail
  become: true
  changed_when: false
  ignore_errors: true    # Ubuntu 19.04

- name: administration | Copy the sendmail configuration file
  template: src=sendmail.cf.j2 dest=/etc/mail/sendmail.cf mode=0755
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  tags:
    - configure
    - mail
    - vm
  become: true

# Copy current user key to root
- import_tasks: copy-keys.yml

- name: administration | Required by zabbix ansible role
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=true"
  tags: package
  with_items:
    - policycoreutils-python
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  changed_when: false
  become: true
  ignore_errors: true

- name: administration | Required by zabbix ansible role
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ jenkins_pkg_state|default('present') }} update_cache=true"
  tags: package
  with_items:
    - policycoreutils
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  changed_when: false
  become: true
  ignore_errors: true
