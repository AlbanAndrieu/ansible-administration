---
# Allow
# sudo mkdir -p /tpref
# sudo mount nabla-nfs:/nabla1/myreference /tpref

# ptxidns01/nissrv01 is dns for france.effix.fr and nis for france.effix.fr
- name: administration | Configure domain file
  template: src=defaultdomain.j2 dest=/etc/defaultdomain
  tags: configure
  become: true

- name: administration | Install nis ypbind
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == 'RedHat')
  tags: package
  with_items:
    - ypbind
  become: true

- name: administration | Install nis rpcbind
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: not (( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' ) and (ansible_distribution_version in ['12.04', '14.04']))
  tags: package
  with_items:
    - rpcbind
  become: true

- name: administration | Install nis ypbind
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  with_items:
    - nis
  become: true
  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )
  tags: package

- name: administration | Copy the nis init script
  copy: src=nis-{{ ansible_distribution }}-{{ ansible_architecture }}.sh dest=/etc/init.d/nis mode=0755
  become: true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ( ansible_distribution_release == 'precise' )
  notify: restart nis
  tags:
   - configure
   - restart
   - notify
   - nis

- name: administration | Configure yellow page file
  become: true
  template: src=yp.conf.j2 dest=/etc/yp.conf
  notify: restart yp
  tags:
   - configure
   - restart
   - notify
   - yp

- name: administration | Configure nis file
  become: true
  template: src=nsswitch.conf.j2 dest=/etc/nsswitch.conf
  tags: configure

- name: administration | Install network-manager
  action: "{{ ansible_pkg_mgr }} name={{ item }} state={{ util_pkg_state|default('present') }}"
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  with_items:
    - network-manager
  become: true
  notify: restart NetworkManager
  tags:
   - package
   - restart
   - notify
   - NetworkManager

# - name: administration | Start the nis service
#   become: true
#   service: name=nis state=started enabled=true
#   tags: service
