
#- name: administration | Install nis
#  apt: pkg=nis state=present
#  become: yes
#  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
#  tags: package

#- name: administration | Configure yellow page file
#  become: yes
#  template: src=yp.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/yp.conf
#  tags: configure
#  notify: restart nis

#- name: administration | Configure nis file
#  become: yes
#  template: src=nsswitch.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/nsswitch.conf
#  tags: configure
#  notify: restart nis

#- name: administration | Copy the nis init script
#  copy: src=nis-{{ ansible_distribution }}-{{ ansible_architecture }}.sh dest=/etc/init.d/nis mode=0755
#  become: yes
#  when: ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )  and ( ansible_distribution_release == 'precise' )
#  tags: configure

#- name: administration | Start the nis service
#  become: yes
#  service: name=nis state=started enabled=true
#  tags: service

- name: administration | Install automount packages
  apt: name={{ item }} state=present
  with_items:
    - autofs
    - autofs5
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')
  tags: package
  become: yes

- name: administration | Install automount packages
  yum: name={{ item }} state=latest
  with_items:
  - autofs
  - nfs-utils
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
  tags: package
  become: yes

#- name: administration | Configure autofs file
#  become: yes
#  template: src=rc.local-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/rc.local
#  tags: configure
#  notify: restart autofs

#- name: administration | Configure autofs file
#  become: yes
#  template: src=auto.master-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/auto.master
#  tags: autofs
#  notify: restart autofs

- name: administration | Set automount mountpoints
  lineinfile: dest=/etc/{{automountPrefix}}direct create=yes regexp="^{{item.key}}\s" line="{{item.key}}    {{mountOptions}}    {{item.value}}"
  with_dict: "{{mountpoints}}"
  notify: restart autofs

- name: administration | Update auto.master
  lineinfile: dest=/etc/{{automountPrefix}}master create=yes regexp="/net\s+-hosts" line="/net    -hosts"
  notify: restart autofs

- name: administration | Update auto.master
  lineinfile: dest=/etc/{{automountPrefix}}master create=yes regexp="^/-\s" line="/-    /etc/{{automountPrefix}}direct    -intr{{autodirectNosuid}},timeo=100"
  notify: restart autofs
  
#- name: administration | Configure autofs file
#  become: yes
#  template: src=autofs_ldap_auth.conf-{{ ansible_distribution }}-{{ ansible_architecture }}.j2 dest=/etc/autofs_ldap_auth.conf
#  tags: configure
#  notify: restart autofs

- name: administration | Start services
  service: name={{ item }} state=started enabled=yes
  with_items:
  - rpcbind
  - nfslock
  when: (ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
  tags: service
  become: yes

- name: administration | Start the autofs service
  service: name=autofs state=started enabled=true
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' or ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux')
  tags: service
  become: yes

- meta: flush_handlers

- pause: 
    seconds: 30
